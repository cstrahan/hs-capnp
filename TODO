QUESTIONS
---------

TODO
----
- legit exceptions
- support default values
- clean-up choice of integral types (remove uncessary use of `fromIntegral`)
- profile / optimize
- consider using a pretty-printing lib for the code generator
- support for different allocation patterns:
  - GC
  - manual
  (Data.Pool creates a (Weak (IORef ())) with an attached finalizer to perform
   cleanup when a Pool is unreachable. Might want to do something similar in
   Segments.)

DONE
----
- complete data structures and core layout API.
- write code generator
- replace the current schema code, completing the bootstrap
- create sample messages
  - inspect
  - make sure the offsets match what I would expect
  - write tests
